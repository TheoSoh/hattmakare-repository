/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hattmakare_projekt;

import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author buggi
 */
public class searchInvoice extends javax.swing.JFrame {

   private InfDB idb;
    
    /**
     * Creates new form searchInvoice
     * @param idb
     */
    public searchInvoice(InfDB idb) {
        initComponents();
        this.idb = idb;
        fillCustomerBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblChooseCustomerHeadline = new javax.swing.JLabel();
        lblFrameHeadline = new javax.swing.JLabel();
        cmbChooseCustomer = new javax.swing.JComboBox<>();
        btnChooseCustomer = new javax.swing.JButton();
        lblChooseOrderHeadline = new javax.swing.JLabel();
        cmbChooseOrder = new javax.swing.JComboBox<>();
        btnChooseOrder = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblChooseCustomerHeadline.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblChooseCustomerHeadline.setText("Välj en kund som en faktura ska skickas till ");

        lblFrameHeadline.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblFrameHeadline.setText("Skicka faktura");

        cmbChooseCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbChooseCustomerActionPerformed(evt);
            }
        });

        btnChooseCustomer.setText("Välj kund");
        btnChooseCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseCustomerActionPerformed(evt);
            }
        });

        lblChooseOrderHeadline.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblChooseOrderHeadline.setText("Välj vilken av denna kunds beställningar som en faktura ska skapas på");

        cmbChooseOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbChooseOrderActionPerformed(evt);
            }
        });

        btnChooseOrder.setText("Välj beställning");
        btnChooseOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(lblFrameHeadline))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(lblChooseCustomerHeadline))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(btnChooseCustomer))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(lblChooseOrderHeadline))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(cmbChooseCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbChooseOrder, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnChooseOrder, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))))
                .addContainerGap(130, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblFrameHeadline)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblChooseCustomerHeadline)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbChooseCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnChooseCustomer)
                .addGap(18, 18, 18)
                .addComponent(lblChooseOrderHeadline)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbChooseOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnChooseOrder)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbChooseCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbChooseCustomerActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbChooseCustomerActionPerformed

    private void btnChooseCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseCustomerActionPerformed
        // TODO add your handling code here:
        String chosenCustomer = cmbChooseCustomer.getSelectedItem().toString();
        String query = "SELECT OrderID FROM `Order` JOIN customer on customer.CustomerID = `order`.Customer WHERE NAME = '" + chosenCustomer + "'";
        
        ArrayList <String> allOrdersForCustomer  ;
        
        try {
            
            allOrdersForCustomer = idb.fetchColumn(query);
            
            for(String orders:allOrdersForCustomer) {
                cmbChooseOrder.addItem(orders);
                
        }
  
        } catch (InfException ex) {
            Logger.getLogger(searchOrder.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_btnChooseCustomerActionPerformed

    private void cmbChooseOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbChooseOrderActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbChooseOrderActionPerformed

    public String chosenOrder(){
     String chosenOrderID = cmbChooseOrder.getSelectedItem().toString();
        
     return chosenOrderID;
 }
    
    private void btnChooseOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseOrderActionPerformed
        // TODO add your handling code here:
       String selectedOrderID = chosenOrder();
        
        dispose();
    }//GEN-LAST:event_btnChooseOrderActionPerformed

   private void fillCustomerBox() {
        
         
        String query = "SELECT name from Customer";
        
        ArrayList <String> allaKundNamn;
        
        try {
            allaKundNamn = idb.fetchColumn(query);
            
            for(String name:allaKundNamn) {
                cmbChooseCustomer.addItem(name);   
            }
            
        }catch(InfException e) {
            JOptionPane.showMessageDialog(null, "fel");
        }
    }   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChooseCustomer;
    private javax.swing.JButton btnChooseOrder;
    private javax.swing.JComboBox<String> cmbChooseCustomer;
    private javax.swing.JComboBox<String> cmbChooseOrder;
    private javax.swing.JLabel lblChooseCustomerHeadline;
    private javax.swing.JLabel lblChooseOrderHeadline;
    private javax.swing.JLabel lblFrameHeadline;
    // End of variables declaration//GEN-END:variables
}
